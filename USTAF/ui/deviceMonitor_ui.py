# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'deviceMonitor.ui'
#
# Created by: PyQt4 UI code generator 4.11.4
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.setEnabled(True)
        MainWindow.resize(800, 600)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.gridLayout_6 = QtGui.QGridLayout(self.centralwidget)
        self.gridLayout_6.setObjectName(_fromUtf8("gridLayout_6"))
        self.gridLayout_5 = QtGui.QGridLayout()
        self.gridLayout_5.setObjectName(_fromUtf8("gridLayout_5"))
        self.gridLayout_4 = QtGui.QGridLayout()
        self.gridLayout_4.setObjectName(_fromUtf8("gridLayout_4"))
        self.groupBox = QtGui.QGroupBox(self.centralwidget)
        self.groupBox.setObjectName(_fromUtf8("groupBox"))
        self.gridLayout = QtGui.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName(_fromUtf8("gridLayout"))
        self.senarioTreeView = QtGui.QTreeView(self.groupBox)
        self.senarioTreeView.setEnabled(True)
        self.senarioTreeView.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.senarioTreeView.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)
        self.senarioTreeView.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection)
        self.senarioTreeView.setObjectName(_fromUtf8("senarioTreeView"))
        self.senarioTreeView.header().setVisible(False)
        self.gridLayout.addWidget(self.senarioTreeView, 0, 0, 1, 1)
        self.gridLayout_4.addWidget(self.groupBox, 0, 0, 1, 1)
        self.groupBox_2 = QtGui.QGroupBox(self.centralwidget)
        self.groupBox_2.setObjectName(_fromUtf8("groupBox_2"))
        self.gridLayout_2 = QtGui.QGridLayout(self.groupBox_2)
        self.gridLayout_2.setObjectName(_fromUtf8("gridLayout_2"))
        self.taskListView = QtGui.QListView(self.groupBox_2)
        self.taskListView.setObjectName(_fromUtf8("taskListView"))
        self.gridLayout_2.addWidget(self.taskListView, 0, 0, 1, 1)
        self.gridLayout_4.addWidget(self.groupBox_2, 0, 1, 1, 1)
        self.gridLayout_5.addLayout(self.gridLayout_4, 0, 0, 1, 1)
        self.groupBox_3 = QtGui.QGroupBox(self.centralwidget)
        self.groupBox_3.setObjectName(_fromUtf8("groupBox_3"))
        self.gridLayout_3 = QtGui.QGridLayout(self.groupBox_3)
        self.gridLayout_3.setObjectName(_fromUtf8("gridLayout_3"))
        self.queueTreeView = QtGui.QTreeView(self.groupBox_3)
        self.queueTreeView.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.queueTreeView.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection)
        self.queueTreeView.setObjectName(_fromUtf8("queueTreeView"))
        self.queueTreeView.header().setVisible(False)
        self.gridLayout_3.addWidget(self.queueTreeView, 0, 0, 1, 1)
        self.gridLayout_5.addWidget(self.groupBox_3, 1, 0, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_5, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setEnabled(True)
        self.toolBar.setObjectName(_fromUtf8("toolBar"))
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionAddScenario = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/scenario.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddScenario.setIcon(icon)
        self.actionAddScenario.setObjectName(_fromUtf8("actionAddScenario"))
        self.actionRun = QtGui.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/run.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRun.setIcon(icon1)
        self.actionRun.setObjectName(_fromUtf8("actionRun"))
        self.actionPause = QtGui.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/pause.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPause.setIcon(icon2)
        self.actionPause.setObjectName(_fromUtf8("actionPause"))
        self.actionAddToExecutionQueue = QtGui.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/add.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAddToExecutionQueue.setIcon(icon3)
        self.actionAddToExecutionQueue.setObjectName(_fromUtf8("actionAddToExecutionQueue"))
        self.actionRemoveCase = QtGui.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/minus.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemoveCase.setIcon(icon4)
        self.actionRemoveCase.setObjectName(_fromUtf8("actionRemoveCase"))
        self.actionCaseDetails = QtGui.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/case_detail.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCaseDetails.setIcon(icon5)
        self.actionCaseDetails.setObjectName(_fromUtf8("actionCaseDetails"))
        self.actionRemoveScenario = QtGui.QAction(MainWindow)
        self.actionRemoveScenario.setIcon(icon4)
        self.actionRemoveScenario.setObjectName(_fromUtf8("actionRemoveScenario"))
        self.actionCancelCurrentTask = QtGui.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/cancel_current.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCancelCurrentTask.setIcon(icon6)
        self.actionCancelCurrentTask.setObjectName(_fromUtf8("actionCancelCurrentTask"))
        self.actionClearTaskQueue = QtGui.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/cancel_all.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClearTaskQueue.setIcon(icon7)
        self.actionClearTaskQueue.setObjectName(_fromUtf8("actionClearTaskQueue"))
        self.actionRemoveFromQueue = QtGui.QAction(MainWindow)
        self.actionRemoveFromQueue.setIcon(icon4)
        self.actionRemoveFromQueue.setObjectName(_fromUtf8("actionRemoveFromQueue"))
        self.actionClearResults = QtGui.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/clear_results.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClearResults.setIcon(icon8)
        self.actionClearResults.setObjectName(_fromUtf8("actionClearResults"))
        self.toolBar.addAction(self.actionAddScenario)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionRun)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionPause)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionCancelCurrentTask)
        self.toolBar.addAction(self.actionClearTaskQueue)
        self.toolBar.addSeparator()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "Device Monitor", None))
        self.groupBox.setTitle(_translate("MainWindow", "Scenario View", None))
        self.groupBox_2.setTitle(_translate("MainWindow", "Task View", None))
        self.groupBox_3.setTitle(_translate("MainWindow", "Execution Queue", None))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar", None))
        self.actionAddScenario.setText(_translate("MainWindow", "addScenario", None))
        self.actionAddScenario.setToolTip(_translate("MainWindow", "add a new scenario", None))
        self.actionRun.setText(_translate("MainWindow", "run", None))
        self.actionRun.setToolTip(_translate("MainWindow", "start task runner", None))
        self.actionPause.setText(_translate("MainWindow", "pause", None))
        self.actionPause.setToolTip(_translate("MainWindow", "pause task runner", None))
        self.actionAddToExecutionQueue.setText(_translate("MainWindow", "addToExecutionQueue", None))
        self.actionAddToExecutionQueue.setToolTip(_translate("MainWindow", "add the test case to execution queue", None))
        self.actionRemoveCase.setText(_translate("MainWindow", "removeCase", None))
        self.actionRemoveCase.setToolTip(_translate("MainWindow", "remove a case from scenario", None))
        self.actionCaseDetails.setText(_translate("MainWindow", "caseDetails", None))
        self.actionCaseDetails.setToolTip(_translate("MainWindow", "case parameters", None))
        self.actionRemoveScenario.setText(_translate("MainWindow", "removeScenario", None))
        self.actionRemoveScenario.setToolTip(_translate("MainWindow", "remove a scenario from DUT", None))
        self.actionCancelCurrentTask.setText(_translate("MainWindow", "cancelCurrentTask", None))
        self.actionCancelCurrentTask.setToolTip(_translate("MainWindow", "cancel current running task", None))
        self.actionClearTaskQueue.setText(_translate("MainWindow", "clearTaskQueue", None))
        self.actionClearTaskQueue.setToolTip(_translate("MainWindow", "clear the task queue", None))
        self.actionRemoveFromQueue.setText(_translate("MainWindow", "removeFromQueue", None))
        self.actionRemoveFromQueue.setToolTip(_translate("MainWindow", "remove task from queue", None))
        self.actionClearResults.setText(_translate("MainWindow", "clearResults", None))
        self.actionClearResults.setToolTip(_translate("MainWindow", "clear all results", None))

import resources_rc_rc
